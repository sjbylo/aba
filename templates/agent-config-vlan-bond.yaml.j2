apiVersion: v1alpha1        
kind: AgentConfig                                                                       
metadata:                 
  name: {{ cluster_name }}
rendezvousIP: {{ rendezvous_ip }}           
hosts:
{#--------------------------------------------------------------
  Precompute offsets so they scale dynamically
  - Each host consumes (arr_ports|length) MACs
  - Each host consumes 1 IP
---------------------------------------------------------------#}
{%- set ports_per_host   = arr_ports | length | int %}
{%- set master_mac_offset = 0 | int %}
{%- set worker_mac_offset = ( num_masters | int ) * ports_per_host %}
{%- set master_ip_offset  = 0 | int %}
{%- set worker_ip_offset  = num_masters | int %}

{%- for role, prefix, count, mac_offset, ip_offset in [
    ("master", master_prefix, num_masters|int, master_mac_offset, master_ip_offset),
    ("worker", worker_prefix, num_workers|int, worker_mac_offset, worker_ip_offset)
] %}
  {%- for hostcnt in range(count) %}
    {%- if role == 'master' and num_workers == '0' and num_masters == '1' %}
  - hostname: {{ cluster_name }}
    {%- else %}                               
  - hostname: {{ prefix }}{{ loop.index }}
    {%- endif %}             
    role: {{ role }}
    interfaces:
    {%- for port in arr_ports %}
      - name: {{ port }}
        macAddress: {{ arr_macs[hostcnt * ports_per_host + loop.index0 + mac_offset] }}
    {%- endfor %}
    networkConfig:
      interfaces:
        - name: bond0.{{ vlan }}  
          description: VLAN {{ vlan }} with bond using ports {{ arr_ports | join(", ") }}
          type: vlan                                                                    
          state: up                                                                     
          vlan:           
            base-iface: bond0                                                           
            id: {{ vlan }}
          ipv4:
            enabled: true
            address:
              - ip: {{ arr_ips[hostcnt + ip_offset] }}
                prefix-length: 24
            dhcp: false
        - name: bond0 
          type: bond 
          state: up
          mac-address: {{ arr_macs[hostcnt * ports_per_host + mac_offset] }}
          ipv4:
            enabled: false
          ipv6:
            enabled: false
          link-aggregation:
            mode: active-backup   # mode=1 active-backup, mode=2 balance-xor or mode=4 802.3ad
            options:
              miimon: "150" 
            port:
            {%- for port in arr_ports %}
              - {{ port }}
            {%- endfor %}
      {%- if arr_dns_servers %}
      dns-resolver:
        config:
          server:
          {%- for dns in arr_dns_servers %}
            - {{ dns }}
          {%- endfor %}
      {%- endif %}
      routes:
        config:
          - destination: 0.0.0.0/0
            next-hop-address: {{ next_hop_address }}
            next-hop-interface: bond0.{{ vlan }}
  {%- endfor %}
{%- endfor %}
